

SET SEARCH_PATH TO RENTAL;

CREATE  OR REPLACE  FUNCTION  CAL_DISCOUNT(CUSTOMER_ID  VARCHAR(10)) RETURNS DECIMAL(10,2) AS
$BODY$
DECLARE
	TP DECIMAL(10,2); D  DECIMAL(10,2);T_DISCOUNT  DECIMAL(10,2)  ;	
	
BEGIN
	SELECT   TOTAL_PRICE AS TP , DISCOUNT AS D   FROM  (((VEHICLE NATURAL JOIN VEHICLE_TYPE) 
         	NATURAL JOIN DEALS_WITH) NATURAL JOIN PAYMENT_DETAILS) WHERE (CUST_ID =CUSTOMER_ID);
	
	T_DISCOUNT=(TP-TP*D);
	RETURN T_DISCOUNT;
END
$BODY$ LANGUAGE  plpgsql;

////////////////////////////////////////////////////////
SET SEARCH_PATH TO RENTAL;

CREATE  OR REPLACE  FUNCTION  CAL_COMMISSION(DEALERID  VARCHAR(10)) RETURNS  NUMERIC(10,2) AS
$BODY$
DECLARE
	TP DECIMAL(10,2); COMM DECIMAL(10,2);T_COMMISSION  DECIMAL(10,2)  ;	
	
BEGIN
	SELECT   TOTAL_PRICE  INTO TP , DEALER_COMMISSION AS COMM   FROM (DEALER JOIN PAYMENT_DETAIL ON	(DEALER.DEALER_ID=PAYMENT_DETAIL.DEALER_ID)  WHERE (DEALER_ID =DEALERID);
	
	T_COMMISSION=(TP-TP*COMM);
	RETURN T_COMMMISSION;
END
$BODY$ LANGUAGE  plpgsql;




//////////////////////////////////////////////////////////////////////////////////

SET SEARCH_PATH TO RENTAL;
CREATE  OR REPLACE  FUNCTION  COUNT_VEHICLE( ) RETURNS INTEGER AS
$BODY$
DECLARE
    C INTEGER;
    CUST CUSTOMER%ROWTYPE;
    
BEGIN

    FOR CUST IN SELECT * FROM CUSTOMER
    LOOP
        SELECT COUNT(VEH_ID) INTO C FROM DEALS_WITH WHERE CUST_ID = CUST.CUST_ID;
        RETURN C;
    END LOOP;
    
END
$BODY$ LANGUAGE  plpgsql;
